/*样式重置*/
*{
    margin: 0;
    padding: 0;
}
img{
    border: 0;
}
body{
    background: #333333;
}
#container{
    width: 570px;
    height: 500px;
    overflow: hidden;
    margin: 50px auto;
    /*定位*/
    position: relative;
}
#big-img{
    width: 570px;
    height: 400px;
    position: relative;
}
#big-img img{
    width: 570px;
    height: 400px;
    //定位相当于左上角 left和top
    position: absolute;
    top: 0;
    left: 0;
}
#small-img{
    /*
    没浮动上来一般是父元素不够宽
    */
    width: 1130px;
    height: 100px;
    background: #cccccc;
    position: absolute;
}
#small-img img{
    /*
    padding是顺时针方向

    */
    width: 130px;
    height: 80px;
    float: left;
    padding: 10px 0 10px 10px;
    cursor: pointer;
}
#info{
    /*
    透明度又兼容性问题 一般得写二个 liheight垂直居中
    父元素一般是相对定位 子元素是绝对定位会释放空间 脱离文档流
    */
    width: 560px;
    height: 30px;
    background: #000000;
    opacity: .5;
    filter: alpha(opacity=50);
    position: absolute;
    bottom: 0;
    left: 0;
    line-height: 30px;
    padding-right: 10px;
}
#info span{
    color: #fff;
    float: right;
}

/*noinspection CssUnknownTarget*/
#arrows span{
    /*
    background-image url设置图片位置 repaet是否重复

    雪碧图就是一堆小图片放在一起 就一次http请求 之后一个固定大小的div，或者其他的，通过backgdround来定位，显示特定的图片


    */
    width: 60px;
    height: 60px;
    position: absolute;
    top: 50%;
    margin-top: -30px;
    background-image: url(pic/btn.gif);
    background-repeat: no-repeat;
    cursor: pointer;
    opacity: 0;
    filter: alpha(opacity=0);
}
#prev{
    left: 10px;
    background-position: 0 0;
}
#next{
    right: 10px;
    background-position: 0 -60px;
}


















